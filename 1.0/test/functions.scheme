(define f (lambda (n) (+ 1 n)))
(define g (lambda (k) (* 2 k)))
(= (f 1) 2)
(= (g 3) 6)
(= (f (g 42)) 85)
(define k 31)
(define n 19)
(= (f n) 20)
(= n 19)
(= (g k) 62)
(= k 31)
(define inc-gen (lambda (inc) (lambda (n) (+ inc n))))
(define up1 (inc-gen 1))
(define fac ((lambda (x) (x x)) (lambda (fact-gen) (lambda (n) (if (>= 1 n) 1 (* n ((fact-gen fact-gen) (- n 1))))))))
(= (fac 0) 1)
(= (fac 1) 1)
(= (fac 2) 2)
(= (fac 3) 6)
(= (fac 4) 24)
(= (fac 5) 120)
(= (fac 6) 720)
(fac 19)
(define up42 (inc-gen 42))
(= (up42 42) 84)
