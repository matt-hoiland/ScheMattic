(define f (lambda (n) (+ 1 n)))
(define g (lambda (k) (* 2 k)))
(= (f 1) 2)
(= (g 3) 6)
(= (f (g 42)) 85)
(define k 31)
(define n 19)
(= (f n) 20)
(= n 19)
(= (g k) 62)
(= k 31)
(define inc-gen (lambda (inc) (lambda (n) (+ inc n))))
(define up1 (inc-gen 1))
(define fac ((lambda (x) (x x)) (lambda (fact-gen) (lambda (n) (if (= 0 n) 1 (* n ((fact-gen fact-gen) (- n 1))))))))
